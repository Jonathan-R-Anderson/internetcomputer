--- a/core/sys/posix/sys/types.d
+++ b/core/sys/posix/sys/types.d
@@
-version(Linux)
+version (MYIC)
 {
     enum clock_t    : long;
 }
--- /dev/null
+++ b/core/sys/myic/syscalls.d
+module core.sys.myic.syscalls;
+
+extern(C):
+
+long ic_syscall(long id, long a1, long a2, long a3, long a4, long a5);
+
+enum SYS_OPEN  = 2;
+enum SYS_READ  = 4;
+enum SYS_WRITE = 5;
+enum SYS_CLOSE = 7;
+enum SYS_EXIT  = 21;
+
+// wrappers
+long open(const char* p, int flags, int mode) {
+    return ic_syscall(SYS_OPEN, cast(long)p, flags, mode, 0, 0);
+}
+
+long read(int fd, void* buf, long n) {
+    return ic_syscall(SYS_READ, fd, cast(long)buf, n, 0, 0);
+}
+
+long write(int fd, const void* buf, long n) {
+    return ic_syscall(SYS_WRITE, fd, cast(long)buf, n, 0, 0);
+}
+
+long close(int fd) {
+    return ic_syscall(SYS_CLOSE, fd, 0, 0, 0, 0);
+}
+
+void exit(int code) {
+    ic_syscall(SYS_EXIT, code, 0, 0, 0, 0);
+    for(;;) {}
+}
